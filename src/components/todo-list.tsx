/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/29q9vSk5LA3
 */
import { Input } from '@/components/ui/input';
import { Button } from '@/components/ui/button';
import { AppDispatch, RootState } from '@/store';
import { useDispatch, useSelector } from 'react-redux';
import { addTask, removeTask, toggleTask } from '@/slices/task.slice';
import clsx from 'clsx';

export function TodoList() {
  const tasks = useSelector((state: RootState) => state.task.tasks);
  const dispatch = useDispatch<AppDispatch>();

  function handleAddTask(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    const input = e.currentTarget.elements.namedItem(
      'task',
    ) as HTMLInputElement;
    dispatch(addTask(input.value));
  }

  return (
    <div className="flex flex-col items-center justify-center min-h-screen bg-gray-100 p-4">
      <h1 className="text-4xl font-bold mb-8">Welcome</h1>
      <form className="w-full max-w-md space-y-4" onSubmit={handleAddTask}>
        <div className="flex flex-col items-center">
          <Input
            className="rounded w-full mb-4"
            placeholder="Enter a task"
            type="text"
            name="task"
          />
          <Button className="rounded w-full" type="submit">
            Add Task
          </Button>
        </div>
      </form>
      <ul className="w-full max-w-md mt-8 space-y-2">
        {tasks.map((task) => (
          <li
            className="flex items-center justify-between p-4 bg-white rounded shadow"
            onClick={() => dispatch(toggleTask(task.id))}
          >
            <span
              className={clsx('text-lg', { 'line-through': task.completed })}
            >
              Task 1
            </span>
            <Button
              size="sm"
              variant="outline"
              onClick={() => dispatch(removeTask(task.id))}
            >
              Delete
            </Button>
          </li>
        ))}
      </ul>
    </div>
  );
}
